!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ASFLAGS	Makefile	/^ASFLAGS = -m32 -MD -I.\/include$/;"	m
CC	Makefile	/^CC      = gcc$/;"	m
CFILES	Makefile	/^CFILES  = $(shell find src\/ -name "*.c")$/;"	m
CFLAGS	Makefile	/^CFLAGS  = -m32 -static -ggdb -MD -Wall -Werror -I.\/include -O2 \\$/;"	m
CR0	include/x86/cpu.h	/^typedef union CR0 {$/;"	u
CR0	include/x86/cpu.h	/^} CR0;$/;"	t	typeref:union:CR0
CR3	include/x86/cpu.h	/^typedef union CR3 {$/;"	u
CR3	include/x86/cpu.h	/^} CR3;$/;"	t	typeref:union:CR3
DPL_KERNEL	include/x86/memory.h	9;"	d
DPL_USER	include/x86/memory.h	10;"	d
ELFHeader	boot/boot.h	/^struct ELFHeader {$/;"	s
GDT_ENTRY	boot/asm.h	2;"	d
GateDesc	include/x86/memory.h	/^} GateDesc;$/;"	t	typeref:struct:GateDescriptor
GateDescriptor	include/x86/memory.h	/^typedef struct GateDescriptor {$/;"	s
INTERRUPT_GATE_32	src/kernel/irq/idt.c	4;"	d	file:
IRQ_SLAVE	src/kernel/irq/i8259.c	5;"	d	file:
IRQ_t	src/kernel/irq/irq_handle.c	/^struct IRQ_t {$/;"	s	file:
KMEM	include/memory.h	24;"	d
KOFFSET	boot/main.c	13;"	d	file:
KOFFSET	include/memory.h	6;"	d
LD	Makefile	/^LD      = ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -melf_i386$/;"	m
ListHead	include/adt/list.h	/^struct ListHead {$/;"	s
ListHead	include/adt/list.h	/^typedef struct ListHead ListHead;$/;"	t	typeref:struct:ListHead
NR_HARD_INTR	src/kernel/irq/irq_handle.c	6;"	d	file:
NR_IRQ	include/x86/cpu.h	112;"	d
NR_IRQ_HANDLE	src/kernel/irq/irq_handle.c	3;"	d	file:
NR_PDE	include/x86/memory.h	29;"	d
NR_PTE	include/x86/memory.h	30;"	d
NR_SEGMENTS	include/x86/memory.h	16;"	d
NULL	include/const.h	7;"	d
OBJS	Makefile	/^OBJS    = $(CFILES:.c=.o) $(SFILES:.S=.o)$/;"	m
PAGE_SIZE	include/x86/memory.h	28;"	d
PCB	include/process.h	/^typedef struct PCB {$/;"	s
PCB	include/process.h	/^} PCB;$/;"	t	typeref:struct:PCB
PDE	include/x86/memory.h	/^} PDE;$/;"	t	typeref:union:PageDirectoryEntry
PD_SIZE	include/x86/memory.h	31;"	d
PHY_MEM	include/memory.h	27;"	d
PORT_PIC_MASTER	src/kernel/irq/i8259.c	3;"	d	file:
PORT_PIC_SLAVE	src/kernel/irq/i8259.c	4;"	d	file:
PTE	include/x86/memory.h	/^} PTE;$/;"	t	typeref:union:PageTableEntry
PageDirectoryEntry	include/x86/memory.h	/^typedef union PageDirectoryEntry {$/;"	u
PageTableEntry	include/x86/memory.h	/^typedef union PageTableEntry {$/;"	u
ProgramHeader	boot/boot.h	/^struct ProgramHeader {$/;"	s
QEMU	Makefile	/^QEMU    = qemu-system-i386$/;"	m
SECTSIZE	boot/main.c	12;"	d	file:
SEG_32BIT	include/x86/memory.h	5;"	d
SEG_4KB_GRANULARITY	include/x86/memory.h	6;"	d
SEG_ASM	boot/asm.h	11;"	d
SEG_CODEDATA	include/x86/memory.h	4;"	d
SEG_EXECUTABLE	include/x86/memory.h	14;"	d
SEG_KERNEL_CODE	include/x86/memory.h	18;"	d
SEG_KERNEL_DATA	include/x86/memory.h	19;"	d
SEG_NULL	include/x86/memory.h	17;"	d
SEG_NULLASM	boot/asm.h	5;"	d
SEG_READABLE	include/x86/memory.h	13;"	d
SEG_TSS	include/x86/memory.h	22;"	d
SEG_TSS_32BIT	include/x86/memory.h	7;"	d
SEG_USER_CODE	include/x86/memory.h	20;"	d
SEG_USER_DATA	include/x86/memory.h	21;"	d
SEG_WRITABLE	include/x86/memory.h	12;"	d
SELECTOR_KERNEL	include/x86/memory.h	24;"	d
SELECTOR_USER	include/x86/memory.h	25;"	d
SERIAL_PORT	src/lib/serial.c	3;"	d	file:
SFILES	Makefile	/^SFILES  = $(shell find src\/ -name "*.S")$/;"	m
SegDesc	include/x86/memory.h	/^} SegDesc;$/;"	t	typeref:struct:SegmentDescriptor
SegmentDescriptor	include/x86/memory.h	/^typedef struct SegmentDescriptor {$/;"	s
TRAP_GATE_32	src/kernel/irq/idt.c	5;"	d	file:
TSS	include/x86/memory.h	/^typedef struct TSS {$/;"	s
TSS	include/x86/memory.h	/^} TSS;$/;"	t	typeref:struct:TSS
TrapFrame	include/x86/memory.h	/^typedef struct TrapFrame {$/;"	s
TrapFrame	include/x86/memory.h	/^} TrapFrame;$/;"	t	typeref:struct:TrapFrame
__ASSERT_H__	include/assert.h	2;"	d
__COMMON_H__	include/common.h	2;"	d
__CONST_H__	include/const.h	2;"	d
__KERNEL_H__	include/kernel.h	2;"	d
__LIST_H__	include/adt/list.h	2;"	d
__MEMORY_H__	include/memory.h	2;"	d
__PROCESS_H__	include/process.h	2;"	d
__STRING_H__	include/string.h	2;"	d
__TYPES_H__	include/types.h	2;"	d
__X86_CPU_H__	include/x86/cpu.h	2;"	d
__X86_H__	include/x86/x86.h	2;"	d
__X86_IO_H__	include/x86/io.h	2;"	d
__X86_MEMORY_H__	include/x86/memory.h	2;"	d
accessed	include/x86/memory.h	/^		uint32_t accessed            : 1;$/;"	m	struct:PageDirectoryEntry::__anon1
accessed	include/x86/memory.h	/^		uint32_t accessed            : 1;$/;"	m	struct:PageTableEntry::__anon2
add_irq_handle	src/kernel/irq/irq_handle.c	/^add_irq_handle(int irq, void (*func)(void) ) {$/;"	f
align	boot/boot.h	/^	unsigned int align;$/;"	m	struct:ProgramHeader
align_to_page	include/x86/memory.h	35;"	d
align_to_page	src/kernel/memory/kvm.c	/^static PDE kpdir[NR_PDE] align_to_page;						\/\/ kernel page directory$/;"	v	file:
align_to_page	src/kernel/memory/kvm.c	/^static PTE kptable[PHY_MEM \/ PAGE_SIZE] align_to_page;		\/\/ kernel page tables$/;"	v	file:
alignment_mask	include/x86/cpu.h	/^		uint32_t alignment_mask      : 1;$/;"	m	struct:CR0::__anon3
asm_do_irq	src/kernel/irq/do_irq.S	/^asm_do_irq:$/;"	l
assert	include/assert.h	17;"	d
base_15_0	include/x86/memory.h	/^	uint32_t base_15_0           : 16;$/;"	m	struct:SegmentDescriptor
base_23_16	include/x86/memory.h	/^	uint32_t base_23_16          : 8;$/;"	m	struct:SegmentDescriptor
base_31_24	include/x86/memory.h	/^	uint32_t base_31_24          : 8;$/;"	m	struct:SegmentDescriptor
bool	include/types.h	/^typedef unsigned char  bool;$/;"	t
bootmain	boot/main.c	/^bootmain(void) {$/;"	f
cache_disable	include/x86/cpu.h	/^		uint32_t cache_disable       : 1;$/;"	m	struct:CR0::__anon3
cli	include/x86/cpu.h	/^cli(void) {$/;"	f
create_kthread	src/kernel/process/util.c	/^create_kthread(void *fun) {$/;"	f
cs	include/x86/memory.h	/^	uint32_t eip, cs, eflags;							\/\/ execution state saved by hardware$/;"	m	struct:TrapFrame
current	src/kernel/process/schedule.c	/^PCB idle, *current = &idle;$/;"	v
dirty	include/x86/memory.h	/^		uint32_t dirty               : 1;$/;"	m	struct:PageTableEntry::__anon2
dont_care	include/x86/memory.h	/^	uint8_t dont_care[88];$/;"	m	struct:TSS
ds	include/x86/memory.h	/^	uint32_t gs, fs, es, ds;							\/\/ data segment registers$/;"	m	struct:TrapFrame
eax	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
ebp	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
ebx	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
ecx	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
edi	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
edx	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
eflags	include/x86/memory.h	/^	uint32_t eip, cs, eflags;							\/\/ execution state saved by hardware$/;"	m	struct:TrapFrame
ehsize	boot/boot.h	/^	unsigned short ehsize;$/;"	m	struct:ELFHeader
eip	include/x86/memory.h	/^	uint32_t eip, cs, eflags;							\/\/ execution state saved by hardware$/;"	m	struct:TrapFrame
elf	boot/boot.h	/^	unsigned char  elf[12];$/;"	m	struct:ELFHeader
emulation	include/x86/cpu.h	/^		uint32_t emulation           : 1;$/;"	m	struct:CR0::__anon3
entry	boot/boot.h	/^	unsigned int   entry;$/;"	m	struct:ELFHeader
error_code	include/x86/memory.h	/^	uint32_t error_code;								\/\/ error code$/;"	m	struct:TrapFrame
es	include/x86/memory.h	/^	uint32_t gs, fs, es, ds;							\/\/ data segment registers$/;"	m	struct:TrapFrame
esi	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
esp	include/x86/memory.h	/^	uint32_t esp, ss;									\/\/ only uses when DPL = 3$/;"	m	struct:TrapFrame
esp0	include/x86/memory.h	/^	uint32_t esp0;$/;"	m	struct:TSS
extension_type	include/x86/cpu.h	/^		uint32_t extension_type      : 1;$/;"	m	struct:CR0::__anon3
false	include/const.h	5;"	d
filesz	boot/boot.h	/^	unsigned int filesz;$/;"	m	struct:ProgramHeader
flags	boot/boot.h	/^	unsigned int   flags;$/;"	m	struct:ELFHeader
flags	boot/boot.h	/^	unsigned int flags;$/;"	m	struct:ProgramHeader
fs	include/x86/memory.h	/^	uint32_t gs, fs, es, ds;							\/\/ data segment registers$/;"	m	struct:TrapFrame
gdt	boot/start.S	/^gdt:$/;"	l
gdt	src/kernel/memory/kvm.c	/^static SegDesc gdt[NR_SEGMENTS];$/;"	v	file:
gdtdesc	boot/start.S	/^gdtdesc:                      # descriptor$/;"	l
get_kcr3	src/kernel/memory/kvm.c	/^inline CR3* get_kcr3() {$/;"	f
get_kpdir	src/kernel/memory/kvm.c	/^inline PDE* get_kpdir() {$/;"	f
get_kptable	src/kernel/memory/kvm.c	/^inline PTE* get_kptable() {$/;"	f
global	include/x86/memory.h	/^		uint32_t global              : 1;$/;"	m	struct:PageTableEntry::__anon2
granularity	include/x86/memory.h	/^	uint32_t granularity         : 1;$/;"	m	struct:SegmentDescriptor
gs	include/x86/memory.h	/^	uint32_t gs, fs, es, ds;							\/\/ data segment registers$/;"	m	struct:TrapFrame
handle_count	src/kernel/irq/irq_handle.c	/^static int handle_count = 0;$/;"	v	file:
handle_pool	src/kernel/irq/irq_handle.c	/^static struct IRQ_t handle_pool[NR_IRQ_HANDLE];$/;"	v	typeref:struct:IRQ_t	file:
handles	src/kernel/irq/irq_handle.c	/^static struct IRQ_t *handles[NR_HARD_INTR];$/;"	v	typeref:struct:IRQ_t	file:
idle	src/kernel/process/schedule.c	/^PCB idle, *current = &idle;$/;"	v
idt	src/kernel/irq/idt.c	/^static GateDesc idt[NR_IRQ];$/;"	v	file:
in_byte	boot/boot.h	/^in_byte(short port) {$/;"	f
in_byte	include/x86/io.h	/^in_byte(uint16_t port) {$/;"	f
in_long	boot/boot.h	/^in_long(short port) {$/;"	f
in_long	include/x86/io.h	/^in_long(uint16_t port) {$/;"	f
init_idt	src/kernel/irq/idt.c	/^void init_idt() {$/;"	f
init_intr	src/kernel/irq/i8259.c	/^void init_intr(void) {$/;"	f
init_page	src/kernel/memory/kvm.c	/^init_page(void) {$/;"	f
init_proc	src/kernel/process/util.c	/^init_proc() {$/;"	f
init_segment	src/kernel/memory/kvm.c	/^init_segment(void) {$/;"	f
init_serial	src/lib/serial.c	/^init_serial(void) {$/;"	f
int16_t	include/types.h	/^typedef          short int16_t;$/;"	t
int32_t	include/types.h	/^typedef          int   int32_t;$/;"	t
int8_t	include/types.h	/^typedef          char  int8_t;$/;"	t
irq	include/x86/memory.h	/^	int32_t irq;										\/\/ #irq$/;"	m	struct:TrapFrame
irq_handle	src/kernel/irq/irq_handle.c	/^void irq_handle(TrapFrame *tf) {$/;"	f
itoa	src/lib/string.c	/^char *itoa(int a) {$/;"	f
kcr3	src/kernel/memory/kvm.c	/^static CR3 kcr3;											\/\/ kernel CR3$/;"	v	file:
limit_15_0	include/x86/memory.h	/^	uint32_t limit_15_0          : 16;$/;"	m	struct:SegmentDescriptor
limit_19_16	include/x86/memory.h	/^	uint32_t limit_19_16         : 4;$/;"	m	struct:SegmentDescriptor
list_add	include/adt/list.h	/^list_add(ListHead *prev, ListHead *next, ListHead *data) {$/;"	f
list_add_after	include/adt/list.h	/^list_add_after(ListHead *list, ListHead *data) {$/;"	f
list_add_before	include/adt/list.h	/^list_add_before(ListHead *list, ListHead *data) {$/;"	f
list_del	include/adt/list.h	/^list_del(ListHead *data) {$/;"	f
list_empty	include/adt/list.h	/^list_empty(ListHead *list) {$/;"	f
list_entry	include/adt/list.h	11;"	d
list_foreach	include/adt/list.h	56;"	d
list_init	include/adt/list.h	/^list_init(ListHead *list) {$/;"	f
logo	src/lib/logo.c	/^unsigned char logo[] = {$/;"	v
machine	boot/boot.h	/^	unsigned short machine;$/;"	m	struct:ELFHeader
magic	boot/boot.h	/^	unsigned int   magic;$/;"	m	struct:ELFHeader
make_invalid_pde	src/kernel/memory/util.c	/^make_invalid_pde(PDE *p) {$/;"	f
make_invalid_pte	src/kernel/memory/util.c	/^make_invalid_pte(PTE *p) {$/;"	f
make_pde	src/kernel/memory/util.c	/^make_pde(PDE *p, void *addr) {$/;"	f
make_pte	src/kernel/memory/util.c	/^make_pte(PTE *p, void *addr) {$/;"	f
memcpy	src/lib/string.c	/^void memcpy(void *dest, const void *src, size_t size) {$/;"	f
memset	src/lib/string.c	/^void memset(void *dest, uint8_t data, size_t size) {$/;"	f
memsz	boot/boot.h	/^	unsigned int memsz;$/;"	m	struct:ProgramHeader
monitor_coprocessor	include/x86/cpu.h	/^		uint32_t monitor_coprocessor : 1;$/;"	m	struct:CR0::__anon3
next	include/adt/list.h	/^	struct ListHead *prev, *next;$/;"	m	struct:ListHead	typeref:struct:ListHead::
next	src/kernel/irq/irq_handle.c	/^	struct IRQ_t *next;$/;"	m	struct:IRQ_t	typeref:struct:IRQ_t::IRQ_t	file:
no_write_through	include/x86/cpu.h	/^		uint32_t no_write_through    : 1;$/;"	m	struct:CR0::__anon3
numeric_error	include/x86/cpu.h	/^		uint32_t numeric_error       : 1;$/;"	m	struct:CR0::__anon3
off	boot/boot.h	/^	unsigned int off;$/;"	m	struct:ProgramHeader
off_t	include/types.h	/^typedef          int   off_t;$/;"	t
offset_15_0	include/x86/memory.h	/^	uint32_t offset_15_0      : 16;$/;"	m	struct:GateDescriptor
offset_31_16	include/x86/memory.h	/^	uint32_t offset_31_16     : 16;$/;"	m	struct:GateDescriptor
operation_size	include/x86/memory.h	/^	uint32_t operation_size      : 1;$/;"	m	struct:SegmentDescriptor
os_init	src/kernel/main.c	/^os_init(void) {$/;"	f
os_init_cont	src/kernel/main.c	/^os_init_cont(void) {$/;"	f
out_byte	boot/boot.h	/^out_byte(short port, char data) {$/;"	f
out_byte	include/x86/io.h	/^out_byte(uint16_t port, uint8_t data) {$/;"	f
out_long	include/x86/io.h	/^out_long(uint16_t port, uint32_t data) {$/;"	f
pa_to_va	include/memory.h	20;"	d
pad0	include/x86/cpu.h	/^		uint32_t pad0                : 10;$/;"	m	struct:CR0::__anon3
pad0	include/x86/cpu.h	/^		uint32_t pad0                : 3;$/;"	m	struct:CR3::__anon4
pad0	include/x86/memory.h	/^		uint32_t pad0                : 1;$/;"	m	struct:PageTableEntry::__anon2
pad0	include/x86/memory.h	/^		uint32_t pad0                : 6;$/;"	m	struct:PageDirectoryEntry::__anon1
pad0	include/x86/memory.h	/^	uint32_t pad0                : 1;$/;"	m	struct:SegmentDescriptor
pad0	include/x86/memory.h	/^	uint32_t pad0             : 8;$/;"	m	struct:GateDescriptor
pad1	include/x86/cpu.h	/^		uint32_t pad1                : 1; $/;"	m	struct:CR0::__anon3
pad1	include/x86/cpu.h	/^		uint32_t pad1                : 7;$/;"	m	struct:CR3::__anon4
pad1	include/x86/memory.h	/^		uint32_t pad1                : 3;$/;"	m	struct:PageTableEntry::__anon2
pad2	include/x86/cpu.h	/^		uint32_t pad2                : 10;$/;"	m	struct:CR0::__anon3
paddr	boot/boot.h	/^	unsigned int paddr;$/;"	m	struct:ProgramHeader
page_cache_disable	include/x86/cpu.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:CR3::__anon4
page_cache_disable	include/x86/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:PageDirectoryEntry::__anon1
page_cache_disable	include/x86/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:PageTableEntry::__anon2
page_directory_base	include/x86/cpu.h	/^		uint32_t page_directory_base : 20;$/;"	m	struct:CR3::__anon4
page_frame	include/x86/memory.h	/^		uint32_t page_frame          : 20;$/;"	m	struct:PageDirectoryEntry::__anon1
page_frame	include/x86/memory.h	/^		uint32_t page_frame          : 20;$/;"	m	struct:PageTableEntry::__anon2
page_write_through	include/x86/cpu.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:CR3::__anon4
page_write_through	include/x86/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:PageDirectoryEntry::__anon1
page_write_through	include/x86/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:PageTableEntry::__anon2
paging	include/x86/cpu.h	/^		uint32_t paging              : 1;$/;"	m	struct:CR0::__anon3
panic	include/assert.h	8;"	d
phentsize	boot/boot.h	/^	unsigned short phentsize;$/;"	m	struct:ELFHeader
phnum	boot/boot.h	/^	unsigned short phnum;$/;"	m	struct:ELFHeader
phoff	boot/boot.h	/^	unsigned int   phoff;$/;"	m	struct:ELFHeader
pid_t	include/types.h	/^typedef          int   pid_t;$/;"	t
present	include/x86/memory.h	/^		uint32_t present             : 1;$/;"	m	struct:PageDirectoryEntry::__anon1
present	include/x86/memory.h	/^		uint32_t present             : 1;$/;"	m	struct:PageTableEntry::__anon2
present	include/x86/memory.h	/^	uint32_t present             : 1;$/;"	m	struct:SegmentDescriptor
present	include/x86/memory.h	/^	uint32_t present          : 1;$/;"	m	struct:GateDescriptor
prev	include/adt/list.h	/^	struct ListHead *prev, *next;$/;"	m	struct:ListHead	typeref:struct:ListHead::ListHead
prev	include/x86/memory.h	/^	uint32_t prev;			\/\/ don't care$/;"	m	struct:TSS
printk	src/lib/printk.c	/^printk(const char *ctl, ...) {$/;"	f
privilege_level	include/x86/memory.h	/^	uint32_t privilege_level     : 2;$/;"	m	struct:SegmentDescriptor
privilege_level	include/x86/memory.h	/^	uint32_t privilege_level  : 2;$/;"	m	struct:GateDescriptor
protect_enable	include/x86/cpu.h	/^		uint32_t protect_enable      : 1;$/;"	m	struct:CR0::__anon3
read_cr0	include/x86/cpu.h	/^read_cr0() {$/;"	f
read_eflags	include/x86/cpu.h	/^read_eflags(void) {$/;"	f
read_write	include/x86/memory.h	/^		uint32_t read_write          : 1; $/;"	m	struct:PageDirectoryEntry::__anon1
read_write	include/x86/memory.h	/^		uint32_t read_write          : 1;$/;"	m	struct:PageTableEntry::__anon2
readsect	boot/main.c	/^readsect(void *dst, int offset) {$/;"	f
readseg	boot/main.c	/^readseg(unsigned char *pa, int count, int offset) {$/;"	f
routine	src/kernel/irq/irq_handle.c	/^	void (*routine)(void);$/;"	m	struct:IRQ_t	file:
schedule	src/kernel/process/schedule.c	/^schedule(void) {$/;"	f
segment	include/x86/memory.h	/^	uint32_t segment          : 16;$/;"	m	struct:GateDescriptor
segment_type	include/x86/memory.h	/^	uint32_t segment_type        : 1;$/;"	m	struct:SegmentDescriptor
serial_idle	src/lib/serial.c	/^serial_idle(void) {$/;"	f	file:
serial_printc	src/lib/serial.c	/^serial_printc(char ch) {$/;"	f
set_intr	src/kernel/irq/idt.c	/^static void set_intr(GateDesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl) {$/;"	f	file:
set_segment	src/kernel/memory/kvm.c	/^set_segment(SegDesc *ptr, uint32_t pl, uint32_t type) {$/;"	f	file:
set_trap	src/kernel/irq/idt.c	/^static void set_trap(GateDesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl) {$/;"	f	file:
set_tss	src/kernel/memory/kvm.c	/^set_tss(SegDesc *ptr) {$/;"	f	file:
set_tss_esp0	src/kernel/memory/kvm.c	/^inline void set_tss_esp0(uint32_t esp) {$/;"	f
shentsize	boot/boot.h	/^	unsigned short shentsize;$/;"	m	struct:ELFHeader
shnum	boot/boot.h	/^	unsigned short shnum;$/;"	m	struct:ELFHeader
shoff	boot/boot.h	/^	unsigned int   shoff;$/;"	m	struct:ELFHeader
shstrndx	boot/boot.h	/^	unsigned short shstrndx;$/;"	m	struct:ELFHeader
size_t	include/types.h	/^typedef          int   size_t;$/;"	t
soft_use	include/x86/memory.h	/^	uint32_t soft_use            : 1;$/;"	m	struct:SegmentDescriptor
ss	include/x86/memory.h	/^	uint32_t esp, ss;									\/\/ only uses when DPL = 3$/;"	m	struct:TrapFrame
ss0	include/x86/memory.h	/^	uint32_t ss0;$/;"	m	struct:TSS
start	boot/start.S	/^start:$/;"	l
start32	boot/start.S	/^start32:$/;"	l
sti	include/x86/cpu.h	/^sti(void) {$/;"	f
strcpy	src/lib/string.c	/^void strcpy(char *d, const char *s) {$/;"	f
strlen	src/lib/string.c	/^size_t strlen(const char *str) {$/;"	f
system	include/x86/memory.h	/^	uint32_t system           : 1;$/;"	m	struct:GateDescriptor
task_switched	include/x86/cpu.h	/^		uint32_t task_switched       : 1;$/;"	m	struct:CR0::__anon3
tf	include/process.h	/^	void *tf;$/;"	m	struct:PCB
true	include/const.h	4;"	d
tss	src/kernel/memory/kvm.c	/^static TSS tss; $/;"	v	file:
type	boot/boot.h	/^	unsigned int type;$/;"	m	struct:ProgramHeader
type	boot/boot.h	/^	unsigned short type;$/;"	m	struct:ELFHeader
type	include/x86/memory.h	/^	uint32_t type                : 4;$/;"	m	struct:SegmentDescriptor
type	include/x86/memory.h	/^	uint32_t type             : 4;$/;"	m	struct:GateDescriptor
uint16_t	include/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	include/types.h	/^typedef unsigned int   uint32_t;$/;"	t
uint8_t	include/types.h	/^typedef unsigned char  uint8_t;$/;"	t
user_supervisor	include/x86/memory.h	/^		uint32_t user_supervisor     : 1;$/;"	m	struct:PageDirectoryEntry::__anon1
user_supervisor	include/x86/memory.h	/^		uint32_t user_supervisor     : 1;$/;"	m	struct:PageTableEntry::__anon2
va_to_pa	include/memory.h	17;"	d
vaddr	boot/boot.h	/^	unsigned int vaddr;$/;"	m	struct:ProgramHeader
val	include/x86/cpu.h	/^	uint32_t val;$/;"	m	union:CR0
val	include/x86/cpu.h	/^	uint32_t val;$/;"	m	union:CR3
val	include/x86/memory.h	/^	uint32_t val;$/;"	m	union:PageDirectoryEntry
val	include/x86/memory.h	/^	uint32_t val;$/;"	m	union:PageTableEntry
version	boot/boot.h	/^	unsigned int   version;$/;"	m	struct:ELFHeader
vfprintf	src/lib/printk.c	/^void vfprintf(void (*printer)(char), const char *ctl, void **args) {$/;"	f
wait_intr	include/x86/cpu.h	/^wait_intr() {$/;"	f
waitdisk	boot/main.c	/^waitdisk(void) {$/;"	f
welcome	src/kernel/main.c	/^welcome(void) {$/;"	f
write_cr0	include/x86/cpu.h	/^write_cr0(CR0 *cr0) {$/;"	f
write_cr3	include/x86/cpu.h	/^write_cr3(CR3 *cr3) {$/;"	f
write_gdtr	include/x86/cpu.h	/^write_gdtr(void *addr, uint32_t size) {$/;"	f
write_idtr	include/x86/cpu.h	/^write_idtr(void *addr, uint32_t size) {$/;"	f
write_protect	include/x86/cpu.h	/^		uint32_t write_protect       : 1; $/;"	m	struct:CR0::__anon3
write_tr	include/x86/cpu.h	/^write_tr(uint16_t selector) {$/;"	f
xxx	include/x86/memory.h	/^	uint32_t edi, esi, ebp, xxx, ebx, edx, ecx, eax;	\/\/ GPRs$/;"	m	struct:TrapFrame
